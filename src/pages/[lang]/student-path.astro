---
import Layout from '@/layouts/Layout.astro';
import { languages, type Lang } from '@/i18n/langUtils';
import { Compass, BookOpen, GraduationCap, FileCheck, PenTool, Award, Briefcase, Globe, Check } from 'lucide-astro';
import Breadcrumbs from '@/components/shared/navigation/Breadcrumbs.astro';
import ContactModal from '@/components/features/contact/ContactModal.astro';
import { getTranslation } from '@/i18n/translationUtils';

import Reviews from '@/components/shared/review/Reviews.astro'
import Contact from '@/components/shared/contact/Contact.astro'
import FAQ from '@/components/shared/faq/FAQ.astro'
import CTA from '@/components/ui/CTA.astro'

// Get the language from the URL parameter
const { lang } = Astro.params;

// Validate the language parameter
if (!lang || !languages.includes(lang as Lang)) {
  return Astro.redirect('/uz/'); // Redirect to default language if invalid
}

// Initialize translation function
const t = (key: string) => getTranslation(lang as Lang, key);

// Breadcrumbs
const breadcrumbItems = [
  { label: t('nav.home'), href: `/${lang}` },
  { label: t('nav.about.studentPath'), href: `/${lang}/student-path` }
];

// Using translation structure
const journeySteps = [
  {
    id: 'exploration',
    title: t('studentPath.journey.exploration.title'),
    description: t('studentPath.journey.exploration.description'),
    icon: 'compass',
    services: [
      t('studentPath.journey.exploration.services.consultation'),
      t('studentPath.journey.exploration.services.selection'),
      t('studentPath.journey.exploration.services.costAnalysis'),
      t('studentPath.journey.exploration.services.scholarships')
    ]
  },
  {
    id: 'preparation',
    title: t('studentPath.journey.preparation.title'),
    description: t('studentPath.journey.preparation.description'),
    icon: 'book-open',
    services: [
      t('studentPath.journey.preparation.services.hskCourses'),
      t('studentPath.journey.preparation.services.motivationLetter'),
      t('studentPath.journey.preparation.services.interview'),
      t('studentPath.journey.preparation.services.requirements')
    ]
  },
  {
    id: 'application',
    title: t('studentPath.journey.application.title'),
    description: t('studentPath.journey.application.description'),
    icon: 'graduation-cap',
    services: [
      t('studentPath.journey.application.services.documents'),
      t('studentPath.journey.application.services.translation'),
      t('studentPath.journey.application.services.submission'),
      t('studentPath.journey.application.services.tracking')
    ]
  },
  {
    id: 'documentation',
    title: t('studentPath.journey.documentation.title'),
    description: t('studentPath.journey.documentation.description'),
    icon: 'file-check',
    services: [
      t('studentPath.journey.documentation.services.visaDocuments'),
      t('studentPath.journey.documentation.services.visaInterview'),
      t('studentPath.journey.documentation.services.tickets'),
      t('studentPath.journey.documentation.services.insurance')
    ]
  },
  {
    id: 'arrival',
    title: t('studentPath.journey.arrival.title'),
    description: t('studentPath.journey.arrival.description'),
    icon: 'pen-tool',
    services: [
      t('studentPath.journey.arrival.services.airportPickup'),
      t('studentPath.journey.arrival.services.accommodation'),
      t('studentPath.journey.arrival.services.registration'),
      t('studentPath.journey.arrival.services.simCard')
    ]
  },
  {
    id: 'study',
    title: t('studentPath.journey.study.title'),
    description: t('studentPath.journey.study.description'),
    icon: 'award',
    services: [
      t('studentPath.journey.study.services.academicSupport'),
      t('studentPath.journey.study.services.adaptation'),
      t('studentPath.journey.study.services.extraClasses'),
      t('studentPath.journey.study.services.events')
    ]
  },
  {
    id: 'career',
    title: t('studentPath.journey.career.title'),
    description: t('studentPath.journey.career.description'),
    icon: 'briefcase',
    services: [
      t('studentPath.journey.career.services.employment'),
      t('studentPath.journey.career.services.resume'),
      t('studentPath.journey.career.services.interviews'),
      t('studentPath.journey.career.services.internships')
    ]
  },
  {
    id: 'network',
    title: t('studentPath.journey.network.title'),
    description: t('studentPath.journey.network.description'),
    icon: 'globe',
    services: [
      t('studentPath.journey.network.services.alumni'),
      t('studentPath.journey.network.services.projects'),
      t('studentPath.journey.network.services.contacts'),
      t('studentPath.journey.network.services.events')
    ]
  }
];

// Server-side render this page
export const prerender = false;

<Layout meta={{ title: t('studentPath.meta.title'), description: t('studentPath.meta.description') }}>
  <main class="min-h-screen bg-gradient-to-b from-white via-blue-50/30 to-white">
    <!-- Hero Section -->
    <section id="china-education-hero" class="relative bg-gradient-to-r from-blue-400 to-blue-500 text-white overflow-hidden py-20">
      <!-- Background elements -->
      <div class="absolute inset-0 overflow-hidden">
        <!-- Large circles in background -->
        <div class="absolute -top-20 -left-20 w-96 h-96 rounded-full bg-blue-300/30"></div>
        <div class="absolute -bottom-40 -right-20 w-[500px] h-[500px] rounded-full bg-blue-300/20"></div>
        
        <!-- Additional design elements -->
        <div class="absolute top-1/2 left-1/4 w-20 h-20 rounded-full bg-white/10"></div>
        <div class="absolute bottom-1/4 right-1/3 w-16 h-16 rounded-full bg-white/15"></div>
        
        <!-- Thin lines -->
        <div class="absolute inset-0" 
             style="background-image: linear-gradient(0deg, rgba(255,255,255,0.05) 1px, transparent 1px), 
                    linear-gradient(90deg, rgba(255,255,255,0.05) 1px, transparent 1px); 
                    background-size: 50px 50px;">
        </div>
      </div>
      
      <!-- Icons (thinner and less intrusive) -->
      <div class="absolute right-10 top-1/3 text-white/20 text-5xl">🎓</div>
      <div class="absolute left-10 bottom-1/3 text-white/20 text-5xl">📚</div>
      
      <!-- Main content -->
      <div class="container mx-auto px-4 relative z-10">
        <div class="max-w-3xl mx-auto text-center">
          <Breadcrumbs items={breadcrumbItems} class="mb-6 text-sm text-white/80" />
          
          <h1 class="text-4xl md:text-5xl font-bold mb-4 text-white drop-shadow-sm">
            {t('studentPath.hero.title')}
          </h1>
          
          <p class="text-xl text-white/90 mb-10">
            {t('studentPath.hero.subtitle')}
          </p>
          
          <div class="flex flex-col sm:flex-row gap-4 justify-center">
            <button 
              class="px-8 py-3 bg-white text-blue-600 font-medium rounded-md hover:bg-blue-50 transition-colors shadow-md"
            >
              {t('studentPath.hero.buttons.consultation')}
            </button>
            <a 
              href="#journey" 
              class="px-8 py-3 bg-blue-600/20 backdrop-blur-sm border border-white/60 text-white font-medium rounded-md hover:bg-blue-600/30 transition-colors"
            >
              {t('studentPath.hero.buttons.learnProcess')}
            </a>
          </div>
        </div>
      </div>
    </section>

    <!-- Journey Map Section -->
    <section id="journey" class="py-20">
      <div class="container mx-auto px-4">
        <div class="text-center mb-16">
          <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">{t('studentPath.journey.title')}</h2>
          <p class="text-xl text-gray-600 max-w-3xl mx-auto">
            {t('studentPath.journey.subtitle')}
          </p>
        </div>
        
        <!-- Journey Timeline -->
        <div class="max-w-4xl mx-auto">
          {journeySteps.map((step, index) => (
            <div class="relative timeline-item" id={step.id}>
              <div class="flex items-start gap-8">
                <!-- Icon Column -->
                <div class="hidden md:flex flex-col items-center">
                  <div class="w-12 h-12 rounded-full bg-primary-100 flex items-center justify-center">
                    {step.icon === 'compass' && <Compass class="w-6 h-6 text-primary-600" />}
                    {step.icon === 'book-open' && <BookOpen class="w-6 h-6 text-primary-600" />}
                    {step.icon === 'graduation-cap' && <GraduationCap class="w-6 h-6 text-primary-600" />}
                    {step.icon === 'file-check' && <FileCheck class="w-6 h-6 text-primary-600" />}
                    {step.icon === 'pen-tool' && <PenTool class="w-6 h-6 text-primary-600" />}
                    {step.icon === 'award' && <Award class="w-6 h-6 text-primary-600" />}
                    {step.icon === 'briefcase' && <Briefcase class="w-6 h-6 text-primary-600" />}
                    {step.icon === 'globe' && <Globe class="w-6 h-6 text-primary-600" />}
                  </div>
                  {index < journeySteps.length - 1 && (
                    <div class="w-0.5 h-24 bg-primary-100"></div>
                  )}
                </div>
                
                <!-- Content -->
                <div class="flex-1">
                  <div class="bg-white rounded-xl p-6 shadow-lg border border-gray-100 hover:shadow-xl transition-all duration-300 mb-8">
                    <div class="flex items-center gap-4 mb-4">
                      <div class="md:hidden w-12 h-12 rounded-full bg-primary-100 flex items-center justify-center">
                        {step.icon === 'compass' && <Compass class="w-6 h-6 text-primary-600" />}
                        {step.icon === 'book-open' && <BookOpen class="w-6 h-6 text-primary-600" />}
                        {step.icon === 'graduation-cap' && <GraduationCap class="w-6 h-6 text-primary-600" />}
                        {step.icon === 'file-check' && <FileCheck class="w-6 h-6 text-primary-600" />}
                        {step.icon === 'pen-tool' && <PenTool class="w-6 h-6 text-primary-600" />}
                        {step.icon === 'award' && <Award class="w-6 h-6 text-primary-600" />}
                        {step.icon === 'briefcase' && <Briefcase class="w-6 h-6 text-primary-600" />}
                        {step.icon === 'globe' && <Globe class="w-6 h-6 text-primary-600" />}
                      </div>
                      <div>
                        <h3 class="text-xl font-bold text-gray-900">{step.title}</h3>
                        <p class="text-gray-600">{step.description}</p>
                      </div>
                    </div>
                    
                    <div class="space-y-3">
                      {step.services.map((service) => (
                        <div class="flex items-start gap-3">
                          <Check class="w-5 h-5 text-primary-600 mt-0.5" />
                          <span class="text-gray-700">{service}</span>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Testimonials Section -->
    <div class="container mx-auto px-4 py-16">
      <Reviews />
    </div>

    <!-- CTA Section -->
    <div class="container mx-auto px-4 py-16">
      <CTA />
    </div>

    <!-- FAQ Section -->
    <div class="container mx-auto px-4 py-16">
      <FAQ />
    </div>

    <!-- Contact Section -->
    <div class="container mx-auto px-4 py-16">
      <Contact />
    </div>

    <ContactModal />
  </main>
</Layout>

<style>
/* Анимация для плавающих элементов */
@keyframes float {
  0% { transform: translateY(0); }
  50% { transform: translateY(-15px); }
  100% { transform: translateY(0); }
}

.text-6xl, .text-5xl, .text-7xl {
  animation: float 8s ease-in-out infinite;
}

.text-5xl {
  animation-delay: 1s;
  animation-duration: 10s;
}

.text-7xl {
  animation-delay: 2s;
  animation-duration: 12s;
}

/* Плавное появление элементов при скролле */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

.fade-in {
  animation: fadeIn 0.8s ease-out forwards;
}

  /* Smooth transitions */
  .transition-colors {
    transition-property: background-color, border-color, color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
  }

  /* Hover effects */
  .hover\:scale-105:hover {
    transform: scale(1.05);
  }

  /* Mobile optimizations */
  @media (max-width: 768px) {
    .grid {
      gap: 1rem;
    }
    
    .text-4xl {
      font-size: 2rem;
    }
    
    .p-6 {
      padding: 1rem;
    }
  }

  /* Animation for timeline */
  .timeline-item {
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.6s ease-out;
  }

  .timeline-item.visible {
    opacity: 1;
    transform: translateY(0);
  }

  /* Gradient text effect */
  .gradient-text {
    background: linear-gradient(to right, #3b82f6, #1d4ed8);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
</style>

<script is:inline>
// Animation for elements appearing on scroll
document.addEventListener('DOMContentLoaded', function() {
  // Add unique ID to our section
  const heroSection = document.querySelector('section');
  if (heroSection) {
    heroSection.id = 'china-education-hero';
    heroSection.classList.add('fade-in');
  }
  
  // Small parallax effect on mouse movement
  document.addEventListener('mousemove', function(e) {
    const moveX = (e.clientX - window.innerWidth / 2) / 50;
    const moveY = (e.clientY - window.innerHeight / 2) / 50;
    
    // Select circular elements
    const circles = document.querySelectorAll('#china-education-hero .rounded-full');
    circles.forEach(function(circle, index) {
      const factor = index % 2 === 0 ? 1 : -1;
      if (circle instanceof HTMLElement) {
        circle.style.transform = `translate(${moveX * factor}px, ${moveY * factor}px)`;
      }
    });
  });

  // Intersection Observer for timeline animation
  const observer = new IntersectionObserver(function(entries) {
    entries.forEach(function(entry) {
      if (entry.isIntersecting && entry.target instanceof HTMLElement) {
        entry.target.classList.add('visible');
      }
    });
  }, {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  });

  const timelineItems = document.querySelectorAll('.timeline-item');
  timelineItems.forEach(function(item) {
    observer.observe(item);
  });
});
</script>
