<script>
  import { onMount } from 'svelte';
  import { Hand, ChevronRight } from 'lucide-svelte';
  import { createEmblaCarousel } from './components/emblaCarouselUtils.js';
  
  import ButtonView from '@/components/ui/svelte/ButtonView.svelte';
  import SectionHeader from '@/components/ui/svelte/SectionHeader.svelte';
  import PartnerCardItem from './components/PartnerCardItem.svelte';
  import BackgroundDecoration from './components/BackgroundDecoration.svelte';
  import { partners } from './data/partners.js';
  import type { PartnersTranslations } from '@/i18n/features/home/partners';
  
  // Props
  export let lang;
  export let translations;
  
  // Type checking for translations
  $: typedTranslations = translations as PartnersTranslations;
  
  // State
  let isMobile = false;
  let swipeAnimationActive = true;
  let selectedIndex = 0;
  
  // DOM refs
  let emblaRef;
  let emblaApi;
  let autoplay;
  
  // Setup carousel on mount
  onMount(() => {
    // ... (existing mount code)
  });
  
  // Carousel navigation functions
  function scrollNext() {
    if (emblaApi) emblaApi.scrollNext();
  }
  
  function scrollPrev() {
    if (emblaApi) emblaApi.scrollPrev();
  }
</script>

<div class="w-full bg-[#F5F9FB] py-12 relative">
  <BackgroundDecoration />
  <div class="w-full max-w-[1920px] mx-auto px-4 relative z-10">
    <SectionHeader 
      title={typedTranslations.title}
      subtitle={typedTranslations.description}
    />

    <div class="flex justify-end mb-4">
      <div class={`flex items-center gap-2 px-4 py-2 bg-white backdrop-blur-sm rounded-full shadow-sm transition-transform duration-700 ${
        swipeAnimationActive ? "translate-x-2" : "-translate-x-2"
      }`}>
        <Hand class="w-5 h-5 text-primary" />
        <span class="text-sm font-semibold">
          {typedTranslations.swipeToSlide}
        </span>
      </div>
    </div>

    <!-- Rest of component omitted for brevity -->

    <div class="text-center mt-12">
      <ButtonView
        href={`/${lang}/partners`} 
        text={typedTranslations.viewAllPartners} 
        variant="desktop" 
        showOnMobile={false}
      />
      <ButtonView
        href={`/${lang}/partners`} 
        text={typedTranslations.viewAllPartners} 
        variant="mobile" 
        showOnDesktop={false}
      />
    </div>
  </div>
</div> 