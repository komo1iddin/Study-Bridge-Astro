---
import { formatDate } from '@/lib/blog';
import type { BlogPost } from '@/lib/blog';
import { cn } from '@/lib/utils';

interface Props {
  post: BlogPost;
  variant?: 'default' | 'featured' | 'minimal';
  className?: string;
  lang?: string;
}

const { post, variant = 'default', className, lang = 'uz' } = Astro.props;
const isMinimal = variant === 'minimal';
const isFeatured = variant === 'featured';

// Helper function to map category IDs to display names
function getCategoryLabel(category: string): string {
  switch (category) {
    case 'academic': return 'Академические';
    case 'study-tips': return 'Советы по учебе';
    case 'career': return 'Карьера';
    case 'student-life': return 'Студенческая жизнь';
    case 'technology': return 'Технологии';
    default: return category;
  }
}
---

<article 
  class={cn(
    "group relative flex flex-col overflow-hidden rounded-xl transition-all duration-300",
    "hover:shadow-lg transform hover:-translate-y-1",
    isFeatured ? "h-full" : "",
    isMinimal ? "border-0" : "border border-blue-100",
    "bg-white",
    className
  )}
>
  <div class={cn(
    "relative overflow-hidden",
    isMinimal ? "aspect-[16/9] rounded-lg" : 
    isFeatured ? "aspect-[16/12]" : "aspect-[16/9]",
  )}>
    <img
      src={post.coverImage}
      alt={post.title}
      class="h-full w-full object-cover transition-transform duration-500 group-hover:scale-105"
    />
    <div class="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
  </div>

  <div class={cn(
    "flex flex-col",
    isMinimal ? "p-2" : isFeatured ? "p-6" : "p-4"
  )}>
    <div class="flex items-center gap-2 mb-2">
      {!isMinimal && post.categories.slice(0, 2).map((category) => (
        <span class="text-xs px-2 py-0.5 bg-blue-100 text-blue-700 rounded-full">
          {getCategoryLabel(category)}
        </span>
      ))}
      {!isMinimal && (
        <span class="text-xs text-blue-500 ml-auto">
          {post.readTime}
        </span>
      )}
    </div>

    <h3 class={cn(
      "font-semibold tracking-tight leading-tight mb-2 group-hover:text-blue-600 transition-colors",
      isFeatured ? "text-2xl" : isMinimal ? "text-base" : "text-lg"
    )}>
      <a href={`/${lang}/blog/${post.id}`}>
        {post.title}
      </a>
    </h3>

    {!isMinimal && (
      <p class={cn(
        "text-gray-600 line-clamp-2 mb-4",
        isFeatured ? "text-base" : "text-sm"
      )}>
        {post.excerpt}
      </p>
    )}

    <div class="mt-auto flex items-center gap-2">
      {!isMinimal && (
        <img
          src={post.author.avatar}
          alt={post.author.name}
          class="h-8 w-8 rounded-full object-cover border-2 border-blue-200"
        />
      )}
      <div class="flex flex-col">
        {!isMinimal && (
          <span class="text-xs font-medium text-gray-700">
            {post.author.name}
          </span>
        )}
        <span class="text-xs text-blue-500">
          {formatDate(post.publishedDate)}
        </span>
      </div>
    </div>
  </div>
</article> 