---
import { programStore, $programFilter } from '@/data/store/programs/programStore';
import Select from '../../core/Card/Select.astro';
import { getLangFromUrl } from '@/i18n/langUtils';
import { getProgramsTranslations } from '@/i18n/features/programs';

const currentFilter = $programFilter.get();
const lang = getLangFromUrl(Astro.url);
const t = getProgramsTranslations(lang);

interface Option {
  value: string;
  label: string;
}

const languages: Option[] = ['English', 'Chinese', 'Russian'].map(lang => ({
  value: lang,
  label: lang
}));

const durations: Option[] = ['6 months', '1 year', '2 years', '4 years'].map(duration => ({
  value: duration,
  label: duration
}));

const priceRanges: Option[] = [
  { min: 0, max: 5000, label: '$0 - $5,000' },
  { min: 5000, max: 10000, label: '$5,000 - $10,000' },
  { min: 10000, max: 20000, label: '$10,000 - $20,000' },
  { min: 20000, max: Infinity, label: '$20,000+' }
].map(range => ({
  value: JSON.stringify(range),
  label: range.label
}));
---

<div class="program-filters" data-testid="program-filter">
  <h3>{t.filter.title}</h3>
  
  <div class="filters-grid">
    <div class="filter-group">
      <Select
        label={t.filter.language}
        name="language"
        options={languages}
        value={currentFilter.language}
      />
    </div>

    <div class="filter-group">
      <Select
        label={t.filter.duration}
        name="duration"
        options={durations}
        value={currentFilter.duration}
      />
    </div>

    <div class="filter-group">
      <Select
        label={t.filter.priceRange}
        name="priceRange"
        options={priceRanges}
        value={JSON.stringify(currentFilter.priceRange)}
      />
    </div>
  </div>

  <button 
    class="clear-filters" 
    onclick="clearFilters()"
    disabled={!currentFilter.language && !currentFilter.duration && !(currentFilter.priceRange?.min ?? 0)}
  >
    {t.filter.clearFilters}
  </button>
</div>

<script>
  function updateFilter(key, value) {
    if (typeof window !== 'undefined' && window.programStore) {
      const filter = window.programStore.getFilter();
      window.programStore.setFilter({ ...filter, [key]: value });
      window.programStore.loadPrograms();
    }
  }

  function updatePriceRange(rangeString) {
    if (typeof window !== 'undefined' && window.programStore) {
      const range = JSON.parse(rangeString);
      const filter = window.programStore.getFilter();
      window.programStore.setFilter({ ...filter, priceRange: range });
      window.programStore.loadPrograms();
    }
  }

  function clearFilters() {
    if (typeof window !== 'undefined' && window.programStore) {
      window.programStore.clearFilter();
    }
  }

  // Add event listeners once the document is ready
  document.addEventListener('DOMContentLoaded', () => {
    // Setup language filter change listener
    const languageSelect = document.querySelector('select[name="language"]');
    if (languageSelect) {
      languageSelect.addEventListener('change', (e) => {
        updateFilter('language', e.target.value);
      });
    }

    // Setup duration filter change listener
    const durationSelect = document.querySelector('select[name="duration"]');
    if (durationSelect) {
      durationSelect.addEventListener('change', (e) => {
        updateFilter('duration', e.target.value);
      });
    }

    // Setup price range filter change listener
    const priceRangeSelect = document.querySelector('select[name="priceRange"]');
    if (priceRangeSelect) {
      priceRangeSelect.addEventListener('change', (e) => {
        updatePriceRange(e.target.value);
      });
    }

    // Setup clear filters button listener
    const clearButton = document.querySelector('.clear-filters');
    if (clearButton) {
      clearButton.addEventListener('click', () => {
        clearFilters();
      });
    }
  });
</script>

<style>
  .program-filters {
    @apply bg-white rounded-lg shadow-md p-6 mb-8;
  }

  h3 {
    @apply text-lg font-semibold mb-4;
  }

  .filters-grid {
    @apply grid grid-cols-1 md:grid-cols-3 gap-4;
  }

  .filter-group {
    @apply space-y-2;
  }

  .clear-filters {
    @apply mt-6 px-4 py-2 bg-gray-100 text-gray-700 rounded border hover:bg-gray-200 transition-colors;
  }

  .clear-filters:disabled {
    @apply text-gray-400 cursor-not-allowed;
  }
</style>
