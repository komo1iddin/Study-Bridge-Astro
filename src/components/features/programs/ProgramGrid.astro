---
// ProgramGrid.astro
import ProgramCard from './ProgramCard.astro';
import { getLangFromUrl } from '@/i18n/langUtils';
import { getProgramsTranslations } from '@/i18n/features/programs';
import { ArrowRight } from 'lucide-astro';

interface Props {
  programs: any[];
}

const { programs } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = getProgramsTranslations(lang);
---

<!-- Grid Container -->
<div class="space-y-12">
  <div 
    id="program-grid" 
    class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 cards-container"
  >
    {programs && programs.length > 0 ? (
      programs.map((program, index) => (
        <div class="program-card" style={`animation-delay: ${index * 100}ms`}>
          <ProgramCard program={program} />
        </div>
      ))
    ) : (
      <div class="col-span-full text-center p-4 text-gray-600">
        {t.labels.noResults}
      </div>
    )}
  </div>

  <div class="flex justify-center mt-12">
    <a
      href={`/${lang}/programs`}
      class="cta-button bg-gradient-to-r from-blue-600 to-indigo-600 text-white px-8 py-2.5 rounded-full hover:shadow-lg hover:from-blue-700 hover:to-indigo-700 transition-all duration-300 flex items-center gap-2"
    >
      {t.labels.viewAll}
      <ArrowRight class="h-4 w-4" />
    </a>
  </div>
</div>

<style>
  /* Animatsiyalar */
  @keyframes scaleIn {
    from {
      transform: scale(0.95);
      opacity: 0;
    }
    to {
      transform: scale(1);
      opacity: 1;
    }
  }

  /* Element animatsiyalari */
  .program-card {
    animation: scaleIn 0.5s ease-out forwards;
    opacity: 0;
  }

  /* CTA button hover effect */
  .cta-button {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .cta-button:hover {
    transform: translateY(-2px);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .program-card {
      animation-delay: 0s !important;
    }
  }
</style>

