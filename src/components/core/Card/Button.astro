---
// components/core/Button.astro
export interface Props {
  variant?: 'primary' | 'secondary' | 'outline' | 'ghost';
  size?: 'sm' | 'md' | 'lg';
  radius?: 'none' | 'sm' | 'md' | 'lg' | 'full';  // yangi property
  fullWidth?: boolean;
  href?: string;
  type?: 'button' | 'submit';
  class?: string;
}

const {
  variant = 'primary',
  size = 'md',
  radius = 'md',  // default qiymat
  fullWidth = false,
  href,
  type = 'button',
  class: className,
  ...rest
} = Astro.props;

const variants = {
  primary: 'bg-primary-600 text-white hover:bg-primary-700 focus:ring-primary-500',
  secondary: 'bg-gray-600 text-white hover:bg-gray-700 focus:ring-gray-500',
  outline: 'border-2 border-primary-600 text-primary-600 hover:bg-primary-50 focus:ring-primary-500',
  ghost: 'text-primary-600 hover:bg-primary-50 focus:ring-primary-500'
};

const sizes = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-4 py-2 text-base',
  lg: 'px-6 py-3 text-lg'
};

const radiusStyles = {
  none: 'rounded-none',
  sm: 'rounded',
  md: 'rounded-md',
  lg: 'rounded-lg',
  full: 'rounded-full'
};

const classes = [
  'inline-flex items-center justify-center font-medium transition-colors',
  'focus:outline-none focus:ring-2 focus:ring-offset-2',
  variants[variant],
  sizes[size],
  radiusStyles[radius],  // radius klassini qo'shdik
  fullWidth ? 'w-full' : '',
  className
].join(' ');
---

{
  href ? (
    <a href={href} class={classes} {...rest}>
      <slot />
    </a>
  ) : (
    <button type={type} class={classes} {...rest}>
      <slot />
    </button>
  )
}
