The project is built on Astro, with React and its components being used in specific areas where needed (e.g., sliders, filtering, complex animations, advanced components). The rest of the site will primarily rely on Astro due to its lightweight and fast performance. However, there must be design consistency between Astro components and React components, meaning they should look seamless and unified.

The entire project must adhere to a unified design language. This applies to existing components as well as any components you create, modify, or update—they all must follow the same design consistency.

Components like Badge, Button, Card, Alert, Avatar, Select, and similar ones should be universally reusable across the project.

If you're creating a new component, make sure to place it in the appropriate folder based on the overall project structure. Avoid making the project disorganized.

If a component is created and it’s clear that it will become too large, it should be divided into smaller parts and then used by importing those parts as needed.

Content such as posts, university information, grants, FAQs, features, testimonials, and similar items will be handled using Astro collections and utilized within components. These content files should reside in the `content` folder.

Other types of data should be stored in the `data` folder.

When building a component, any mock or real data used within it must be centralized in either the `content` or `data` folder and imported from there. This ensures the centralization of data is maintained.